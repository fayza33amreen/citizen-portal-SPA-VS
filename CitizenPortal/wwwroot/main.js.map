{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customer.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/material.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/sign-up-dialog/sign-up-dialog.component.html","webpack:///./src/app/sign-up-dialog/sign-up-dialog.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ApproutingModule { }","\r\n<app-navbar></app-navbar>\r\n\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Citizen Portal';\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { MaterialModule } from './material'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SignUpDialogComponent } from './sign-up-dialog/sign-up-dialog.component';\r\nimport { ApproutingModule } from './app-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    NavbarComponent,\r\n    SignUpDialogComponent\r\n  ],\r\n\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    MaterialModule,\r\n    ApproutingModule\r\n  ],\r\n  entryComponents: [\r\n    SignUpDialogComponent\r\n  ],\r\n  exports: [\r\n    MaterialModule,\r\n    SignUpDialogComponent\r\n  ],\r\n  \r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class Customer {\r\n    constructor(\r\n        public email: string,\r\n        public customerType: string,\r\n        public firstName: string,\r\n        public lastName: string,\r\n        public company: string,\r\n        public address: string,\r\n        public city: string,\r\n        public province: string,\r\n        public postal: string,\r\n        public phone1: string,\r\n        public phone1Tpe: string,\r\n        public phone2: string,\r\n        public phone2Tpe: string,\r\n        public phone3: string,\r\n        public phone3Tpe: string,\r\n        public securityQues: string,\r\n        public answer: string\r\n\r\n\r\n    ){}\r\n}\r\n","<div class=\"grid-container\">\r\n    <p>Fields required for input are marked with <span style=\"color: red\">*required</span></p>\r\n  <mat-card >\r\n    <mat-card-header>\r\n      <mat-toolbar  class=\"header-title\">New Customer Sign-Up</mat-toolbar>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"dashboard-card-content\" >\r\n      <form #userForm=\"ngForm\" class=\"example-form\" >\r\n        <div>\r\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n            <mat-label>Email: <span style=\"color: red\">(required)</span></mat-label>\r\n            <input matInput placeholder=\"Email\" [(formControl)]=\"emailControl\">\r\n            <mat-error *ngIf=\"emailControl.hasError('email') && !emailControl.hasError('required')\">\r\n              Please enter a valid email address\r\n            </mat-error>\r\n            <mat-error *ngIf=\"emailControl.hasError('required')\">\r\n              Email is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field> \r\n        </div>\r\n        <div style=\"clear:both;\"></div>\r\n        <div class=\"left\">\r\n          <mat-form-field appearance=\"outline\" class=\"float-input\">\r\n            <mat-label>First Name:</mat-label>\r\n            <input matInput placeholder=\"First Name\" name=\"firstName\" [(formControl)]=\"firstNameControl\">\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"right\">\r\n          <mat-form-field appearance=\"outline\" class=\"float-input\">\r\n            <mat-label>Last Name:</mat-label>\r\n            <input matInput placeholder=\"Last Name\" name=\"lastName\" [(formControl)]=\"lastNameControl\">\r\n          </mat-form-field>\r\n        </div>\r\n        <div style=\"clear:both;\"></div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n            <mat-label>Company Name:</mat-label>\r\n            <input matInput placeholder=\"Company Name\" name=\"companyName\" [(formControl)]=\"companyNameControl\">\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n            <mat-label>Address: <span style=\"color: red\">(required)</span></mat-label>\r\n            <input matInput placeholder=\"Address\" name=\"address\" [(formControl)]=\"addressControl\">\r\n            <mat-error *ngIf=\"addressControl.hasError('required')\">\r\n              Address is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n            <mat-label>City: <span style=\"color: red\">(required)</span></mat-label>\r\n            <input matInput placeholder=\"City\" name=\"city\" [(formControl)]=\"cityControl\">\r\n            <mat-error *ngIf=\"cityControl.hasError('required')\">\r\n              City is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n          </div>\r\n          <div>\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Province: <span style=\"color: red\">(required)</span></mat-label>\r\n              <input matInput placeholder=\"Province\" name=\"province\" [(formControl)]=\"provinceControl\">\r\n              <mat-error *ngIf=\"provinceControl.hasError('required')\">\r\n                Province is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div>\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Postal: <span style=\"color: red\">(required)</span></mat-label>\r\n              <input matInput placeholder=\"Postal\" name=\"postal\" [(formControl)]=\"postalControl\">\r\n              <mat-error *ngIf=\"postalControl.hasError('required')\">\r\n                Postal is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"left\">\r\n            <mat-form-field appearance=\"outline\" class=\"float-input\">\r\n              <mat-label>Phone1: <span style=\"color: red\">(required)</span></mat-label>\r\n              <input matInput placeholder=\"Phone1\" name=\"phone1\" [(formControl)]=\"phone1Control\">\r\n              <mat-error *ngIf=\"phone1Control.hasError('required')\">\r\n                Phone 1 is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"right\">\r\n            <mat-form-field appearance=\"outline\" class=\"float-input\">\r\n              <mat-select placeholder=\"Phone1 Type\" name=\"phone1Type\" [(formControl)]=\"phone1TypeControl\">\r\n                <mat-option *ngFor=\"let phoneType of phoneTypes\" value=\"phoneType.index\">\r\n                  {{ phoneType }}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"phone1TypeControl.hasError('required')\">\r\n                Phone 1 Type is <strong>required</strong>\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div style=\"clear:both;\"></div>\r\n          <div class=\"left\">\r\n            <mat-form-field appearance=\"outline\" class=\"float-input\">\r\n              <mat-label>Phone2:</mat-label>\r\n              <input matInput placeholder=\"Phone2\" [(formControl)]=\"phone2Control\">\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"right\">\r\n            <mat-form-field appearance=\"outline\" class=\"float-input\">\r\n              <mat-select placeholder=\"Phone2 Type\" name=\"phone2Type\" [(formControl)]=\"phone2TypeControl\">\r\n                <mat-option *ngFor=\"let phoneType of phoneTypes\" value=\"phoneType.index\">\r\n                  {{ phoneType }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div style=\"clear:both;\"></div>\r\n          <div class=\"left\">\r\n            <mat-form-field appearance=\"outline\" class=\"float-input\">\r\n              <mat-label>Phone3:</mat-label>\r\n              <input matInput placeholder=\"Phone3\" [(formControl)]=\"phone3Control\" > \r\n              \r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"right\">\r\n            <mat-form-field appearance=\"outline\" class=\"float-input\" >\r\n              <mat-select placeholder=\"Phone3 Type\"  name=\"phone3Type\" [(formControl)]=\"phone3TypeControl\">\r\n                <mat-option *ngFor=\"let phoneType of phoneTypes\" value=\"phoneType.index\">{{ phoneType }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        <div style=\"clear:both;\"></div>\r\n        <br >\r\n        <button mat-stroked-button [disabled]='userForm.form.invalid' style=\"margin-right:2%\" color=\"primary\" (click)=\"openDialog()\" >Sign Up</button>\r\n        <button mat-stroked-button>Cancel</button>\r\n      </form> \r\n    </mat-card-content>\r\n  </mat-card>\r\n</div> \r\n\r\n","import { Component } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Breakpoints, BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\r\nimport { Customer } from '../customer';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\nimport { SignUpDialogComponent } from '../sign-up-dialog/sign-up-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent {\r\n  phoneTypes = ['Mobile Phone', 'Land Phone'];\r\n  phone3TypeDisable = false;\r\n  \r\n  constructor(public dialog: MatDialog){}\r\n    openDialog(): void {\r\n      let dialogRef = this.dialog.open(SignUpDialogComponent, {\r\n      });\r\n    }\r\n\r\n    \r\n  emailControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.emailControl.hasError('required') ? 'You must enter a value' :\r\n        this.emailControl.hasError('email') ? 'Not a valid email' :\r\n            '';\r\n  }\r\n\r\n  firstNameControl = new FormControl('', );\r\n  lastNameControl = new FormControl('', );\r\n  companyNameControl = new FormControl('', );\r\n\r\n  addressControl = new FormControl('', [\r\n    Validators.required\r\n  ]);\r\n  cityControl = new FormControl('', [\r\n    Validators.required\r\n  ]);\r\n  provinceControl = new FormControl('', [\r\n    Validators.required\r\n  ]);\r\n  postalControl = new FormControl('', [\r\n    Validators.required\r\n  ]);\r\n  phone1Control = new FormControl('', [\r\n    Validators.required\r\n  ]);\r\n  phone1TypeControl = new FormControl('', [\r\n    Validators.required\r\n  ]);\r\n  phone2Control = new FormControl();\r\n  phone2TypeControl = new FormControl();\r\n  phone3Control = new FormControl();\r\n  phone3TypeControl = new FormControl();\r\n  \r\n  customerModel = new Customer(\r\n    this.emailControl.value,'',this.firstNameControl.value,this.lastNameControl.value,this.companyNameControl.value,\r\n    this.addressControl.value,this.cityControl.value,this.provinceControl.value,this.postalControl.value,\r\n    this.phone1Control.value,this.phone1TypeControl.value, this.phone2Control.value,this.phone2TypeControl.value,\r\n    this.phone3Control.value,this.phone3TypeControl.value,'','');\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { \r\n    MatGridListModule, \r\n    MatCardModule, \r\n    MatDialogModule,\r\n    MatMenuModule, \r\n    MatIconModule,\r\n    MatInputModule, \r\n    MatSelectModule,\r\n    MatButtonModule, \r\n    MatToolbarModule, \r\n    MatSidenavModule, \r\n    MatListModule,\r\n    MatFormFieldModule } from '@angular/material';    \r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatGridListModule,\r\n        MatCardModule,\r\n        MatDialogModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatToolbarModule,\r\n        MatSidenavModule,\r\n        MatSelectModule,\r\n        MatListModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule\r\n        \r\n      ],\r\n\r\n      exports: [\r\n        MatGridListModule,\r\n        MatCardModule,\r\n        MatDialogModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatToolbarModule,\r\n        MatSidenavModule,\r\n        MatSelectModule,\r\n        MatListModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule\r\n      ],\r\n})\r\nexport class MaterialModule { }","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav-content>\r\n    <mat-toolbar>\r\n      <span>citizen-portal</span>\r\n    </mat-toolbar>\r\n    <!-- Add Content Here -->\r\n    <app-dashboard></app-dashboard>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches)\r\n    );\r\n    \r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n  \r\n  }\r\n","<p>\r\n  sign-up-dialog works!\r\n</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sign-up-dialog',\r\n  templateUrl: './sign-up-dialog.component.html',\r\n  styleUrls: ['./sign-up-dialog.component.css']\r\n})\r\nexport class SignUpDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n"],"sourceRoot":""}